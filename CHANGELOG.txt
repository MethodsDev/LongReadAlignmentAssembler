v0.2.34
- refined sc gtf merge and expr quant merging: performing per-cluster quant and merging tracking files plus providing cluster-based pseudo-bulk expr files.
- only report read weighting and zero-frac-assigned compat reads under debug mode instead of by default

v0.2.33
- make clear in sc wdl that expr is pseudobulk
- enable gene symbol incorporation into single cell data when using ref-quant only mod
- in quant-only w/ LRAA input gtf having TSS and PolyA annotations, only integrate those TSS and PolyA features instead of trying to de novo discover from read alignments

v0.2.32
- incorporating single cell cluster-based assembly workflow

v0.2.31
- rare edgecase bugfix around multipaths that should have been single paths

v0.2.30
- major refactoring of the LRAA driver
- doing a full quant post asm including a final round of min isoform fraction based filtering

v0.2.29
- bugfix around retaining spurs matching to input transcripts
- added another ONT test

v0.2.28
- running most of assembly mode in draft quant mode then employing the final quant mode - difference is how they priority FSM assignments of reads.
-  if more than 10 isoforms for a given gene, then be a bit more aggressive in filtering based on isoform fractional expression to reduce runtimes
- set max number of graph path nodes per component


v0.2.27
- incorporate_gene_symbols_in_sc_features.py for sc matrices
- support gzipped gtf files as input
- address inefficiency in resetting read count
- no pruning of exon coverge segments that overlap exons of input reference transcript

v0.2.26
- pruning introns > 100kb
- default threads=4
- norm default now 1k

v0.2.25
- bugfix around LowFi aggregation of splices and intron pruning

v0.2.24
- added code to infer transcriptional orientation of reads not provided as strand-specific. Not fully baked inot the LRAA pipeline yet though.
- under LowFi mode, setting fracture_splice_graph_at_input_transcript_bounds to False, also added contaiment and contained-by info in the expr tsv
- include exon and intron coords in the expr file
- set min intron support to 2 - should except input guide transcripts though
- no purging of input gtf introns
- aggregate splice dist in LowFi mode
- in debug mode, report prelim isoforms before filtering
- added debug option to not filter isoforms, and also now only reporting read support in gtf file if debug set


v0.2.23
- set min path score default to 1 instead of 2

v0.2.22
- added option --LowFi 

v0.2.21
- under assembly mode, include alt isoform splice compatibilities in quant outputs.
- adjusted default requirements for polyA and TSS definitions to slightly more stringent: min_alignments_define: 5, min_frac_gene_alignments_define: 0.1

v0.2.20
- merge short deletions in input transcripts

v0.2.19
- high EM max iter during asm
- EM alpha set to zero during asm except for final quant

v0.2.18
- including EM regularization factor EM_alpha * num_ambigous_reads, used during quant but not asm step.
- capping EM steps at 250 for quant
- default min mapQ is now zero

v0.2.17
- incorporated FSM compatibility into read assignment logic cascade.


v0.2.16
- wdls greatly simplified.
- after initial asm, doing quant based on all reads not just the norm reads


v0.2.15
- altered handling of input ref trans in genome annot guided mode. Added CLI option: --ref_trans_filter_mode, default:  retain_expressed

v0.2.14
- incorporated CGPT implementation of EM as default and alternative to the BJH implementation. Can be set via CLI --EM_implementation

v0.2.13
- major refactoring of the EM code

v0.2.11
- redo read weighting, restrict to initial M step.

v0.2.10
- dont aggregate small splice dist if alt intron is a ref intron
- computing multipath transcript compatibility weights based on distance to termini
- restructuring quant in assembly step to access mp_counter
- included option --no_use_weighted_read_assignments to restore earlier behavior

v0.2.9
- made aggressive read assignment a configurable parameter
- skip genes w/o read support
- adding test for expr corr w/ and w/o EM
- blackened all pylib
- adjusting TSS and PolyA for input_transcripts based on dist/2

v0.2.8
- split parallelization targeting larger components to separate threads while the main process quickly handles the smaller ones directly.
- wdl updates exposing more input parameters
- refactoring of Quant module, running EM on per-gene basis instead of per-contig, separate EM max iterations for quant vs. asm
- refactoring of transcript isoform filtering methods into TranscriptFiltering module.

v0.2.7
- pruning low supported introns within exon islands and aggregating for splice dist for low qual alignments

v0.2.6
- during assembly mode, including input transcripts as substrates for path nodes instead of just for the splice graph construction

v0.2.5
- EM on by default (use --no_EM to disable)
